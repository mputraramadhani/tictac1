/*!
 * 
 * GAME SETTING CUSTOMIZATION START
 * 
 */ var iconsArr=[{o:"assets/icon_o_1.png",x:"assets/icon_x_1.png",oShadow:"assets/icon_o_1_shadow.png",xShadow:"assets/icon_x_1_shadow.png"},{o:"assets/icon_o_2.png",x:"assets/icon_x_2.png",oShadow:"assets/icon_o_1_shadow.png",xShadow:"assets/icon_x_1_shadow.png"},{o:"assets/icon_o_3.png",x:"assets/icon_x_3.png",oShadow:"assets/icon_o_1_shadow.png",xShadow:"assets/icon_o_1_shadow.png"},{o:"assets/icon_o_4.png",x:"assets/icon_x_4.png",oShadow:"assets/icon_o_1_shadow.png",xShadow:"assets/icon_o_1_shadow.png"},{o:"assets/icon_o_6.png",x:"assets/icon_x_6.png",oShadow:"assets/icon_o_6_shadow.png",xShadow:"assets/icon_x_6_shadow.png"},{o:"assets/icon_5.png",x:"assets/icon_5.png",oShadow:"assets/icon_o_1_shadow.png",xShadow:"assets/icon_o_1_shadow.png"}],defaultSettings={twoPlayer:!0,size:3,win:3,levelMax:4,timeMax:1e3},customSettings={enable:!0,twoPlayer:!0,sizeMin:3,sizeMax:8,winMin:3,winMax:5,levelMax:4,timeMax:1e3},boardSettings={width:100,margin:20,radius:15,shadowX:5,shadowY:10,size:5,win:5,color:"#012465",winColor:"#e2bf30",boardColor:"#0068c6",tweenSpeed:.3,tweenScale:2,tweenOffset:1.5,strokeEnable:!0,strokeNumber:10,strokeColor:"#fff",timer:9e4},textDisplay={customTitle:"Custom Board",customSize:"[NUMBER] x [NUMBER] size",customWin:"[NUMBER] win",vs:"VS",player1:"Player 1",player2:"Player 2",computer:"Computer",userTurn:"Your turn",playerTurn:"[NAME] turn",computerTurn:"Thinking...",gameWin:"[NUMBER] win",draw:"Draw",timeUp:"Time's Up",exitTitle:"Exit Game",exitMessage:"Are you sure you want\nto quit game?",share:"Share your score:",resultTitle:"Game Over",resultDesc:"you won [NUMBER] round"},shareEnable=!0,shareTitle="Highscore on Tic Tac Toe is [SCORE]pts",shareMessage="[SCORE]pts is mine new highscore on Tic Tac Toe game! Try it now!";/*!
*
* GAME SETTING CUSTOMIZATION END
*
*/ $.editor={enable:!1};var playerData={score:0,opponentScore:0},gameData={paused:!0,moving:!1,icon:0,iconSwitch:!1,icons:["o","x"],type:"classic",custom:{size:0,win:0},settings:{size:0,win:0,level:0,timer:0},turn:0,player:0,ai:!1,aiMove:!1,complete:!1},timeData={enable:!1,startDate:null,nowDate:null,timer:0,oldTimer:0},strokeData={x:0,y:0},tweenData={score:0,tweenScore:0};/*!
* 
* GAME BUTTONS - This is the function that runs to setup button event
* 
*/ function buildGameButton(){$(window).focus(function(){buttonSoundOn.visible||toggleSoundInMute(!1),"undefined"!=typeof buttonMusicOn&&(buttonMusicOn.visible||toggleMusicInMute(!1))}),$(window).blur(function(){buttonSoundOn.visible||toggleSoundInMute(!0),"undefined"!=typeof buttonMusicOn&&(buttonMusicOn.visible||toggleMusicInMute(!0))}),buttonClassic.cursor="pointer",buttonClassic.addEventListener("click",function(e){playSound("soundButton"),gameData.type="classic",toggleMainButton("players")}),buttonCustom.cursor="pointer",buttonCustom.addEventListener("click",function(e){playSound("soundButton"),gameData.type="custom",toggleMainButton("players")}),buttonOnePlayer.cursor="pointer",buttonOnePlayer.addEventListener("click",function(e){playSound("soundButton"),checkGameType(!0)}),buttonTwoPlayer.cursor="pointer",buttonTwoPlayer.addEventListener("click",function(e){playSound("soundButton"),checkGameType(!1)}),buttonLocal.cursor="pointer",buttonLocal.addEventListener("click",function(e){playSound("soundButton"),socketData.online=!1,toggleMainButton("default")}),buttonOnline.cursor="pointer",buttonOnline.addEventListener("click",function(e){playSound("soundButton"),checkQuickGameMode()}),buttonStart.cursor="pointer",buttonStart.addEventListener("click",function(e){playSound("soundButton"),gameData.type="custom",multiplayerSettings.localPlay?toggleMainButton("local"):checkQuickGameMode()}),buttonSizeL.cursor="pointer",buttonSizeL.addEventListener("click",function(e){playSound("soundButton2"),toggleCustomSize(!1)}),buttonSizeR.cursor="pointer",buttonSizeR.addEventListener("click",function(e){playSound("soundButton2"),toggleCustomSize(!0)}),buttonWinL.cursor="pointer",buttonWinL.addEventListener("click",function(e){playSound("soundButton2"),toggleCustomWin(!1)}),buttonWinR.cursor="pointer",buttonWinR.addEventListener("click",function(e){playSound("soundButton2"),toggleCustomWin(!0)}),buttonCustomStart.cursor="pointer",buttonCustomStart.addEventListener("click",function(e){playSound("soundButton"),"function"==typeof initSocket&&multiplayerSettings.enable&&socketData.online?postSocketUpdate("players"):goPage("players")}),buttonPlayersIcon.cursor="pointer",buttonPlayersIcon.addEventListener("click",function(e){playSound("soundButton2"),toggleGameIcon()}),buttonPlayersSwitch.cursor="pointer",buttonPlayersSwitch.addEventListener("click",function(e){playSound("soundButton2"),toggleGameIconSide()}),buttonPlayersStart.cursor="pointer",buttonPlayersStart.addEventListener("click",function(e){playSound("soundButton"),"function"==typeof initSocket&&multiplayerSettings.enable&&socketData.online?postSocketUpdate("start"):goPage("game")}),itemExit.addEventListener("click",function(e){}),buttonContinue.cursor="pointer",buttonContinue.addEventListener("click",function(e){playSound("soundButton"),goPage("main"),Android.showInterstitialInGame("EndGame")}),buttonSoundOff.cursor="pointer",buttonSoundOff.addEventListener("click",function(e){toggleSoundMute(!0)}),buttonSoundOn.cursor="pointer",buttonSoundOn.addEventListener("click",function(e){toggleSoundMute(!1)}),"undefined"!=typeof buttonMusicOff&&(buttonMusicOff.cursor="pointer",buttonMusicOff.addEventListener("click",function(e){toggleMusicMute(!0)})),"undefined"!=typeof buttonMusicOn&&(buttonMusicOn.cursor="pointer",buttonMusicOn.addEventListener("click",function(e){toggleMusicMute(!1)})),buttonFullscreen.cursor="pointer",buttonFullscreen.addEventListener("click",function(e){toggleFullScreen()}),buttonExit.cursor="pointer",buttonExit.addEventListener("click",function(e){togglePop(!0),toggleOption()}),buttonSettings.cursor="pointer",buttonSettings.addEventListener("click",function(e){toggleOption()}),buttonConfirm.cursor="pointer",buttonConfirm.addEventListener("click",function(e){playSound("soundButton"),togglePop(!1),stopAudio(),stopGame(),goPage("main"),"function"==typeof initSocket&&multiplayerSettings.enable&&socketData.online&&exitSocketRoom()}),buttonCancel.cursor="pointer",buttonCancel.addEventListener("click",function(e){playSound("soundButton"),togglePop(!1)}),gameData.custom.size=customSettings.sizeMin,gameData.custom.win=customSettings.winMin,checkCustomSettings(),displayPlayerIcon()}/*!
* 
* TOGGLE GAME TYPE - This is the function that runs to toggle game type
* 
*/ function toggleMainButton(e){if("function"==typeof initSocket&&multiplayerSettings.enable&&(gameLogsTxt.visible=!0,gameLogsTxt.text=""),buttonStart.visible=!1,buttonTypeContainer.visible=!1,buttonPlayerContainer.visible=!1,buttonLocalContainer.visible=!1,"default"==e)buttonTypeContainer.visible=!0;else if("start"==e)buttonStart.visible=!0;else if("local"==e)buttonLocalContainer.visible=!0;else if("players"==e){if("classic"==gameData.type){if(!defaultSettings.twoPlayer)return void goPage("category")}else if(!customSettings.twoPlayer)return void goPage("category");buttonPlayerContainer.visible=!0}}function checkGameType(e){gameData.ai=e,"classic"==gameData.type?goPage("players"):goPage("custom")}function checkQuickGameMode(){socketData.online=!0,multiplayerSettings.enterName?goPage("name"):(buttonStart.visible=!1,buttonTypeContainer.visible=!1,buttonPlayerContainer.visible=!1,buttonLocalContainer.visible=!1,addSocketRandomUser())}function toggleCustomSize(e){e?(gameData.custom.size++,gameData.custom.size=gameData.custom.size>customSettings.sizeMax?customSettings.sizeMax:gameData.custom.size):(gameData.custom.size--,gameData.custom.size=gameData.custom.size<customSettings.sizeMin?customSettings.sizeMin:gameData.custom.size),gameData.custom.win=gameData.custom.win>gameData.custom.size?gameData.custom.size:gameData.custom.win,gameData.custom.win=gameData.custom.win<customSettings.sizeMin?customSettings.sizeMin:gameData.custom.win,checkCustomSettings(),"function"==typeof initSocket&&multiplayerSettings.enable&&socketData.online&&postSocketUpdate("updatecustom",{size:gameData.custom.size,win:gameData.custom.win},!0)}function toggleCustomWin(e){e?(gameData.custom.win++,gameData.custom.win=gameData.custom.win>gameData.custom.size?gameData.custom.size:gameData.custom.win,gameData.custom.win=gameData.custom.win>customSettings.winMax?customSettings.winMax:gameData.custom.win):(gameData.custom.win--,gameData.custom.win=gameData.custom.win<customSettings.winMin?customSettings.winMin:gameData.custom.win),checkCustomSettings(),"function"==typeof initSocket&&multiplayerSettings.enable&&socketData.online&&postSocketUpdate("updatecustom",{size:gameData.custom.size,win:gameData.custom.win},!0)}function checkCustomSettings(){var e=textDisplay.customSize.replace("[NUMBER]",gameData.custom.size);e=e.replace("[NUMBER]",gameData.custom.size),sizeTxt.text=e,winTxt.text=textDisplay.customWin.replace("[NUMBER]",gameData.custom.win)}function toggleGameIcon(){gameData.icon++,gameData.icon=gameData.icon>iconsArr.length-1?0:gameData.icon,displayPlayerIcon(),"function"==typeof initSocket&&multiplayerSettings.enable&&socketData.online&&postSocketUpdate("updateplayers",{icon:gameData.icon,switch:gameData.iconSwitch,icons:gameData.icons},!0)}function toggleGameIconSide(){gameData.iconSwitch=1!=gameData.iconSwitch,gameData.iconSwitch?gameData.icons=["x","o"]:gameData.icons=["o","x"],displayPlayerIcon(),"function"==typeof initSocket&&multiplayerSettings.enable&&socketData.online&&postSocketUpdate("updateplayers",{icon:gameData.icon,switch:gameData.iconSwitch,icons:gameData.icons},!0)}function displayPlayerIcon(){for(var e=0;e<2;e++){$.players["playerIconContainer"+e].removeAllChildren();var a="icon"+gameData.icon+gameData.icons[e];$.players["playerIcon"+e]=new createjs.Bitmap(loader.getResult(a)),centerReg($.players["playerIcon"+e]),$.players["playerIconShadow"+e]=new createjs.Bitmap(loader.getResult(a+"Shadow")),centerReg($.players["playerIconShadow"+e]),$.players["playerIcon"+e].y=-20,$.players["playerIconShadow"+e].x=$.players["playerIcon"+e].x+boardSettings.shadowX,$.players["playerIconShadow"+e].y=$.players["playerIcon"+e].y+boardSettings.shadowY,$.players["playerIconContainer"+e].addChild($.players["playerIconShadow"+e],$.players["playerIcon"+e])}}function resizeSocketLog(){gameLogsTxt.font="30px bpreplaybold",gameLogsTxt.textAlign="center",gameLogsTxt.color="#ccc","main"==curPage?(viewport.isLandscape,gameLogsTxt.x=canvasW/2,gameLogsTxt.y=canvasH/100*75):"custom"==curPage&&(viewport.isLandscape?(gameLogsTxt.x=canvasW/2,gameLogsTxt.y=canvasH/100*67):(gameLogsTxt.x=canvasW/2,gameLogsTxt.y=canvasH/100*65))}/*!
* 
* TOGGLE POP - This is the function that runs to toggle popup overlay
* 
*/ function togglePop(e){confirmContainer.visible=e}/*!
* 
* DISPLAY PAGES - This is the function that runs to display pages
* 
*/ var curPage="";function goPage(e){curPage=e,$("#roomWrapper").hide(),$("#roomWrapper .innerContent").hide(),gameLogsTxt.visible=!1,mainContainer.visible=!1,nameContainer.visible=!1,roomContainer.visible=!1,customContainer.visible=!1,playersContainer.visible=!1,gameContainer.visible=!1,resultContainer.visible=!1;var a=null;switch(e){case"main":a=mainContainer,"function"==typeof initSocket&&multiplayerSettings.enable?toggleMainButton("start"):toggleMainButton("default");break;case"name":a=nameContainer,$("#roomWrapper").show(),$("#roomWrapper .nameContent").show(),$("#roomWrapper .fontNameError").html(""),$("#enterName").show();break;case"room":a=roomContainer,$("#roomWrapper").show(),$("#roomWrapper .roomContent").show(),switchSocketRoomContent("lists");break;case"custom":a=customContainer,buttonCustomStart.visible=!0,buttonSizeL.visible=buttonSizeR.visible=!0,buttonWinL.visible=buttonWinR.visible=!0,"function"==typeof initSocket&&multiplayerSettings.enable&&socketData.online&&(socketData.host||(buttonCustomStart.visible=!1,buttonSizeL.visible=buttonSizeR.visible=!1,buttonWinL.visible=buttonWinR.visible=!1));break;case"players":a=playersContainer,buttonPlayersStart.visible=!0,buttonPlayersIcon.visible=!0,buttonPlayersSwitch.visible=!0,"function"==typeof initSocket&&multiplayerSettings.enable&&socketData.online?socketData.host||(buttonPlayersStart.visible=!1,buttonPlayersIcon.visible=!1,buttonPlayersSwitch.visible=!1):gameData.ai?$.players.player1.text=textDisplay.computer:$.players.player1.text=textDisplay.player2;break;case"game":a=gameContainer,startGame();break;case"result":if(a=resultContainer,stopGame(),togglePop(!1),playSound("soundResult"),tweenData.tweenScore=0,"function"==typeof initSocket&&multiplayerSettings.enable&&socketData.online){var t=playerData.score;socketData.host||(t=playerData.opponentScore),TweenMax.to(tweenData,.5,{tweenScore:t,overwrite:!0,onUpdate:function(){resultDescTxt.text=textDisplay.resultDesc.replace("[NUMBER]",Math.floor(tweenData.tweenScore))}}),socketData.host&&postSocketCloseRoom(),saveGame(t)}else TweenMax.to(tweenData,.5,{tweenScore:playerData.score,overwrite:!0,onUpdate:function(){resultDescTxt.text=textDisplay.resultDesc.replace("[NUMBER]",Math.floor(tweenData.tweenScore))}}),saveGame(playerData.score)}null!=a&&(a.visible=!0,a.alpha=0,TweenMax.to(a,.5,{alpha:1,overwrite:!0})),resizeCanvas()}/*!
* 
* START GAME - This is the function that runs to start game
* 
*/ function startGame(){gameData.paused=!1,gameData.complete=!1,gameData.turn=0,gameData.player=0,gameData.moving=!1,buildPlayers(),"classic"==gameData.type?gameData.settings={size:defaultSettings.size,win:defaultSettings.win,level:defaultSettings.levelMax,timer:defaultSettings.timeMax}:gameData.settings={size:gameData.custom.size,win:gameData.custom.win,level:customSettings.levelMax,timer:customSettings.timeMax},timeData.oldTimer=-1,timeData.countdown=boardSettings.timer,timerTxt.text=timerRedTxt.text=millisecondsToTimeGame(timeData.countdown),timerRedTxt.alpha=0,statusContainer.alpha=0,buildBoard(),"function"==typeof initSocket&&multiplayerSettings.enable&&socketData.online?socketData.host&&toggleGameTimer(!0):toggleGameTimer(!0)}/*!
* 
* STOP GAME - This is the function that runs to stop play game
* 
*/ function stopGame(){boardDesignContainer.removeAllChildren(),boardIconContainer.removeAllChildren(),gameData.paused=!0,TweenMax.killAll(!1,!0,!1)}function saveGame(e){"function"==typeof toggleScoreboardSave&&($.scoreData.score=e,"undefined"!=typeof type&&($.scoreData.type=type),toggleScoreboardSave(!0))}/*!
* 
* BUILD PLAYERS - This is the function that runs to build players
* 
*/ function buildPlayers(){for(var e=0;e<2;e++){$.players["gameIconContainer"+e].removeAllChildren(),"function"==typeof initSocket&&multiplayerSettings.enable&&socketData.online||1==e&&(gameData.ai?$.players.gamePlayer1.text=textDisplay.computer:$.players.gamePlayer1.text=textDisplay.player2),$.players["gameTurn"+e].text="";var a="icon"+gameData.icon+gameData.icons[e];$.players["gameIcon"+e]=new createjs.Bitmap(loader.getResult(a)),centerReg($.players["gameIcon"+e]),$.players["gameIconShadow"+e]=new createjs.Bitmap(loader.getResult(a+"Shadow")),centerReg($.players["gameIconShadow"+e]),$.players["gameIcon"+e].y=-35,$.players["gameIconShadow"+e].x=$.players["gameIcon"+e].x+boardSettings.shadowX,$.players["gameIconShadow"+e].y=$.players["gameIcon"+e].y+boardSettings.shadowY,$.players["gameIconContainer"+e].addChild($.players["gameIconShadow"+e],$.players["gameIcon"+e])}playerData.score=0,playerData.opponentScore=0,displayPlayerScore()}/*!
* 
* BUILD BOARD - This is the function that runs to build board
* 
*/ function buildBoard(){playSound("soundStart"),statusContainer.alpha=0,boardDesignContainer.removeAllChildren(),boardIconContainer.removeAllChildren(),boardStroke.graphics.clear(),gameData.complete=!1,gameData.aiMove=!1,gameData.board=[];var e=(boardSettings.width+boardSettings.margin/2)*gameData.settings.size,a=(boardSettings.width+boardSettings.margin/2)*gameData.settings.size;e+=boardSettings.margin/2,a+=boardSettings.margin/2;var t=new createjs.Shape;t.graphics.beginFill(boardSettings.boardColor).drawRoundRectComplex(-e/2,-a/2,e,a,boardSettings.radius,boardSettings.radius,boardSettings.radius,boardSettings.radius),boardDesignContainer.addChild(t);var n={x:0,y:0,sX:0,sY:0};n.sX=-(boardSettings.width+boardSettings.margin/2)*(gameData.settings.size-1)/2,n.sY=-(boardSettings.width+boardSettings.margin/2)*(gameData.settings.size-1)/2,n.x=n.sX,n.y=n.sY;for(var o=0,i=0;i<gameData.settings.size;i++){gameData.board.push([]);for(var s=0;s<gameData.settings.size;s++){var r=new createjs.Shape;r.graphics.beginFill(boardSettings.winColor).drawRoundRectComplex(-boardSettings.width/2,-boardSettings.width/2,boardSettings.width,boardSettings.width,boardSettings.radius,boardSettings.radius,boardSettings.radius,boardSettings.radius),r.alpha=0,gameData.board[i][s]=new createjs.Shape,gameData.board[i][s].graphics.beginFill(boardSettings.color).drawRoundRectComplex(-boardSettings.width/2,-boardSettings.width/2,boardSettings.width,boardSettings.width,boardSettings.radius,boardSettings.radius,boardSettings.radius,boardSettings.radius),gameData.board[i][s].hitArea=new createjs.Shape((new createjs.Graphics).beginFill("#000").drawRect(-boardSettings.width/2,-boardSettings.width/2,boardSettings.width,boardSettings.width)),gameData.board[i][s].bgWin=r,boardDesignContainer.addChild(gameData.board[i][s],r),gameData.board[i][s].x=r.x=n.x,gameData.board[i][s].y=r.y=n.y,n.x+=boardSettings.width+boardSettings.margin/2,gameData.board[i][s].row=i,gameData.board[i][s].column=s,gameData.board[i][s].id=o,gameData.board[i][s].player=-1,gameData.board[i][s].cursor="pointer",gameData.board[i][s].addEventListener("click",function(e){if(!gameData.paused&&!gameData.complete&&!gameData.moving){if(gameData.ai){if(1==gameData.player)return;gameData.aiMove=!0}"function"==typeof initSocket&&multiplayerSettings.enable&&socketData.online&&!socketData.turn||-1==e.target.player&&("function"==typeof initSocket&&multiplayerSettings.enable&&socketData.online?postSocketUpdate("updateicon",{row:e.target.row,column:e.target.column,player:gameData.player}):placeIcon(e.target.row,e.target.column,gameData.player))}}),o++}n.x=n.sX,n.y+=boardSettings.width+boardSettings.margin/2}if(statusContainer.y=a/2+10,boardContainer.scaleX=boardContainer.scaleY=1,a>500){var l=500/a;boardContainer.scaleX=boardContainer.scaleY=l}1==gameData.player&&gameData.ai&&moveAI(),displayPlayerTurn()}/*!
* 
* DISPLAY PLAYER TURN - This is the function that runs to display playter turn
* 
*/ function displayPlayerTurn(){for(var e=0;e<2;e++){var a="";e!=gameData.player||gameData.complete||(a=textDisplay.userTurn,"function"==typeof initSocket&&multiplayerSettings.enable&&socketData.online?a=socketData.host?1==e?textDisplay.playerTurn.replace("[NAME]",$.players["gamePlayer"+e].text):a:0==e?textDisplay.playerTurn.replace("[NAME]",$.players["gamePlayer"+e].text):a:1==e&&gameData.ai&&(a=textDisplay.computerTurn)),$.players["gameTurn"+e].text=a,TweenMax.killTweensOf($.players["gameTurn"+e]),""!=a&&animatePlayerTurn($.players["gameTurn"+e])}}function animatePlayerTurn(e){e.alpha=.3,TweenMax.to(e,.2,{alpha:1,overwrite:!0,onComplete:function(){TweenMax.to(e,.2,{alpha:.3,overwrite:!0,onComplete:animatePlayerTurn,onCompleteParams:[e]})}})}/*!
* 
* ANIMATE TIMER - This is the function that runs to animate countdown
* 
*/ function animateTimer(){timerRedTxt.alpha=0,TweenMax.to(timerRedTxt,.5,{alpha:1,overwrite:!0})}/*!
* 
* GAME STATUS - This is the function that runs to show game status
* 
*/ function showGameStatus(e){statusTxt.text="timer"==e?textDisplay.timeUp:textDisplay.draw,statusContainer.alpha=0,TweenMax.to(statusContainer,.5,{alpha:1,overwrite:!0})}/*!
* 
* DISPLAY PLAYER SCORE - This is the function that runs to display player score
* 
*/ function displayPlayerScore(){for(var e=0;e<2;e++)$.players["gameWin"+e].text=0==e?textDisplay.gameWin.replace("[NUMBER]",playerData.score):textDisplay.gameWin.replace("[NUMBER]",playerData.opponentScore)}/*!
* 
* PLACE ICON - This is the function that runs to display icon
* 
*/ function placeIcon(e,a,t){gameData.moving=!0,playSound("soundDrop"+(Math.floor(3*Math.random())+1));var n=0==t?"icon"+gameData.icon+gameData.icons[0]:"icon"+gameData.icon+gameData.icons[1],o=new createjs.Bitmap(loader.getResult(n));centerReg(o);var i=new createjs.Bitmap(loader.getResult(n+"Shadow"));centerReg(i),gameData.board[e][a].player=t,gameData.board[e][a].icon=o,o.x=gameData.board[e][a].x*boardSettings.tweenOffset,o.y=gameData.board[e][a].y*boardSettings.tweenOffset,i.x=gameData.board[e][a].x+boardSettings.shadowX,i.y=gameData.board[e][a].y+boardSettings.shadowY,o.scaleX=o.scaleY=boardSettings.tweenScale,boardIconContainer.addChild(i,o),i.alpha=0,TweenMax.to(i,boardSettings.tweenSpeed,{alpha:1,scaleX:1,scaleY:1,ease:Expo.easeOut,overwrite:!0}),TweenMax.to(o,boardSettings.tweenSpeed,{scaleX:1,scaleY:1,x:gameData.board[e][a].x,y:gameData.board[e][a].y,ease:Expo.easeOut,overwrite:!0,onComplete:function(){togglePlayer(),checkAnyPlayersWin(e,a,t),displayPlayerTurn(),"function"==typeof initSocket&&multiplayerSettings.enable&&socketData.online?socketData.turn&&setTimeout(function(){postSocketUpdate("updatemovecomplete")},500):gameData.moving=!1}})}/*!
* 
* TOGGLE PLAYER - This is the function that runs to toggle player
* 
*/ function togglePlayer(){gameData.player=0==gameData.player?1:0}/*!
* 
* CHECK PLAYERS WIN - This is the function that runs to check player win
* 
*/ function checkAnyPlayersWin(e,a,t){var n=2.5,o=winLine(bdSimple(),e,a,t);o.length>0?(gameData.complete=!0,0==t?playerData.score++:playerData.opponentScore++,displayPlayerScore(),animateWinBoard(o),playSound("soundComplete")):gameOverQ(bdSimple())?(n=1.5,gameData.complete=!0,showGameStatus("draw"),playSound("soundDraw")):gameData.aiMove&&(gameData.aiMove=!1,moveAI()),gameData.complete&&(gameData.turn=1==gameData.turn?0:1,gameData.player=gameData.turn,TweenMax.to(gameContainer,n,{overwrite:!0,onComplete:function(){buildBoard(),"function"==typeof initSocket&&multiplayerSettings.enable&&socketData.online&&socketData.turn&&postSocketUpdate("updateroundcomplete")}}))}/*!
* 
* ANIMATE WIN BOARD - This is the function that runs to animate win board
* 
*/ function animateWinBoard(e){if(boardSettings.strokeEnable){boardStroke.graphics.setStrokeStyle(boardSettings.strokeNumber,"round").beginStroke(boardSettings.strokeColor),boardStroke.rotation=setRotation(gameData.board[e[0][0]][e[0][1]].x,gameData.board[e[0][0]][e[0][1]].y,gameData.board[e[e.length-1][0]][e[e.length-1][1]].x,gameData.board[e[e.length-1][0]][e[e.length-1][1]].y);var a=boardSettings.width*gameData.settings.win,t=getCenterPosition(gameData.board[e[0][0]][e[0][1]].x,gameData.board[e[0][0]][e[0][1]].y,gameData.board[e[e.length-1][0]][e[e.length-1][1]].x,gameData.board[e[e.length-1][0]][e[e.length-1][1]].y);boardStroke.x=t.x,boardStroke.y=t.y,-1==[0,90,180,270].indexOf(Math.abs(boardStroke.rotation))&&(a+=1.2*boardSettings.width),boardStroke.graphics.mt(-a/2,0),strokeData.x=-a/2,strokeData.y=0,TweenMax.to(strokeData,.5,{x:a/2,y:0,overwrite:!0,onUpdate:function(){boardStroke.graphics.lt(strokeData.x,strokeData.y)}})}for(var n=0;n<e.length;n++){var o=gameData.board[e[n][0]][e[n][1]].bgWin,i=gameData.board[e[n][0]][e[n][1]].icon;TweenMax.to(o,.5,{alpha:1,overwrite:!0}),animateWinIcon(i)}}/*!
* 
* ANIMATE WIN ICONS - This is the function that runs to animate win icons
* 
*/ function animateWinIcon(e){TweenMax.to(e,.5,{scaleX:1.2,scaleY:1.2,ease:Expo.easeIn,overwrite:!0,onComplete:function(){TweenMax.to(e,.5,{scaleX:1,scaleY:1,ease:Expo.easeOut,overwrite:!0})}})}/*!
* 
* AI MOVE - This is the function that runs to move AI
* 
*/ function moveAI(){gameData.moving=!0,TweenMax.to(gameContainer,.5,{overwrite:!0,onComplete:function(){var e=moveAIBest(bdSimple(),1);TweenMax.to(gameContainer,.5,{overwrite:!0,onComplete:function(){e.length>0?placeIcon(e[0],e[1],1):placeIcon(randomIntFromInterval(0,gameData.settings.size-1),randomIntFromInterval(0,gameData.settings.size-1),1)}})}})}function moveAIBest(e,a){return gameData.settings.choice=[],gameData.settings.aiplayer=a,gameData.settings.stt=performance.now(),alphaBetaMinimax(e,0,[0,0],a,-1/0,1/0),gameData.settings.choice}function bdSimple(){for(var e=[],a=0;a<gameData.settings.size;a++){e[a]=[];for(var t=0;t<gameData.settings.size;t++)e[a][t]=gameData.board[a][t].player}return e}function alphaBetaMinimax(e,a,t,n,o,i){var s=1-n;if(winLine(e,t[0],t[1],s).length>0)return s==gameData.settings.aiplayer?20-a:a-20;if(a>gameData.settings.level)return randomIntFromInterval(-5,5);var r=performance.now()-gameData.settings.stt;if(a>3&&r>gameData.settings.timer)return 0;a+=1;var t,l,c=getAvailableMoves(e);if(0==c.length)return randomIntFromInterval(-5,5);if(n===gameData.settings.aiplayer){for(var m=0;m<c.length;m++)if(e[(t=c[m])[0]][t[1]]=n,l=alphaBetaMinimax(e,a,t,1-n,o,i),e[t[0]][t[1]]=-1,l>o)o=l,1==a&&(gameData.settings.choice=t);else if(o>=i)break;return o}for(var m=0;m<c.length;m++)if(e[(t=c[m])[0]][t[1]]=n,l=alphaBetaMinimax(e,a,t,1-n,o,i),e[t[0]][t[1]]=-1,l<i)i=l,1==a&&(gameData.settings.choice=t);else if(i<=o)break;return i}function getAvailableMoves(e){var a=[];if(gameData.settings.size<=5)for(var t=0;t<gameData.settings.size;t++)for(var n=0;n<gameData.settings.size;n++)-1==e[t][n]&&a.push([t,n]);else for(var t=0;t<gameData.settings.size;t++)for(var n=0;n<gameData.settings.size;n++)-1==e[t][n]&&bdNear(e,t,n,2)&&a.push([t,n]);return a}function bdNear(e,a,t,n){for(var o=[[0,-1],[1,-1],[1,0],[1,1],[0,1],[-1,1],[-1,0],[-1,-1]],i=0;i<o.length;i++)for(var s=o[i],r=1;r<=n;r++)if(-1!=bdPlayer(e,a+s[0]*r,t+s[1]*r))return!0;return!1}function winLine(e,a,t,n){for(var o=[[1,0],[0,1],[1,1],[1,-1]],i=0;i<o.length;i++)for(var s=o[i],r=1-gameData.settings.win;r<gameData.settings.win;r++){for(var l=a+s[0]*r,c=t+s[1]*r,m=!0,g=[],u=0;u<gameData.settings.win;u++){var d=l+s[0]*u,p=c+s[1]*u;g.push([d,p]),bdPlayer(e,d,p)==n||(m=!1)}if(m)return g}return[]}function bdPlayer(e,a,t){return a<0?-1:t<0?-1:a>=gameData.settings.size?-1:t>=gameData.settings.size?-1:e[a][t]}function gameOverQ(e){for(var a=0;a<gameData.settings.size;a++)for(var t=0;t<gameData.settings.size;t++)if(-1==bdPlayer(e,a,t))return!1;return!0}/*!
* 
* GAME TIMER - This is the function that runs for game timer
* 
*/ function toggleGameTimer(e){e&&(timeData.startDate=new Date),timeData.enable=e}/*!
* 
* UPDATE GAME - This is the function that runs to loop game update
* 
*/ function updateGame(){gameData.paused||timeData.enable&&(timeData.nowDate=new Date,timeData.elapsedTime=Math.floor(timeData.nowDate.getTime()-timeData.startDate.getTime()),timeData.timer=Math.floor(timeData.countdown-timeData.elapsedTime),updateTimer(),"function"==typeof initSocket&&multiplayerSettings.enable&&socketData.online&&postSocketUpdate("updatetimer",timeData.timer,!0))}function updateTimer(){-1==timeData.oldTimer&&(timeData.oldTimer=timeData.timer),timeData.timer<=0?(showGameStatus("timer"),endGame()):(timeData.oldTimer-timeData.timer>1e3&&(timeData.timer<1e3?(animateTimer(),playSound("soundCountdownEnd")):timeData.timer<6e3&&(animateTimer(),playSound("soundCountdown")),timeData.oldTimer=timeData.timer),timerTxt.text=timerRedTxt.text=millisecondsToTimeGame(timeData.timer))}/*!
* 
* END GAME - This is the function that runs for game end
* 
*/ function endGame(){gameData.paused=!0,toggleGameTimer(!1),TweenMax.to(gameContainer,2,{overwrite:!0,onComplete:function(){goPage("result")}})}/*!
* 
* MILLISECONDS CONVERT - This is the function that runs to convert milliseconds to time
* 
*/ function millisecondsToTimeGame(e){var a=Math.floor(e/1e3%60),t=Math.floor(e/6e4%60);return a<10&&(a="0"+a),t<10&&(t="0"+t),t+":"+a}/*!
* 
* OPTIONS - This is the function that runs to toggle options
* 
*/ function toggleOption(){optionsContainer.visible?optionsContainer.visible=!1:optionsContainer.visible=!0}/*!
* 
* OPTIONS - This is the function that runs to mute and fullscreen
* 
*/ function toggleSoundMute(e){buttonSoundOff.visible=!1,buttonSoundOn.visible=!1,toggleSoundInMute(e),e?buttonSoundOn.visible=!0:buttonSoundOff.visible=!0}function toggleMusicMute(e){buttonMusicOff.visible=!1,buttonMusicOn.visible=!1,toggleMusicInMute(e),e?buttonMusicOn.visible=!0:buttonMusicOff.visible=!0}function toggleFullScreen(){document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement||document.msFullscreenElement?document.exitFullscreen?document.exitFullscreen():document.msExitFullscreen?document.msExitFullscreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitExitFullscreen&&document.webkitExitFullscreen():document.documentElement.requestFullscreen?document.documentElement.requestFullscreen():document.documentElement.msRequestFullscreen?document.documentElement.msRequestFullscreen():document.documentElement.mozRequestFullScreen?document.documentElement.mozRequestFullScreen():document.documentElement.webkitRequestFullscreen&&document.documentElement.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT)}/*!
* 
* SHARE - This is the function that runs to open share url
* 
*/ function share(e){gtag("event","click",{event_category:"share",event_label:e});var a=location.href;a=a.substring(0,a.lastIndexOf("/")+1);var t="",n="";t=shareTitle.replace("[SCORE]",playerData.score),n=shareMessage.replace("[SCORE]",playerData.score);var o="";"twitter"==e?o="https://twitter.com/intent/tweet?url="+a+"&text="+n:"facebook"==e?o="https://www.facebook.com/sharer/sharer.php?u="+encodeURIComponent(a+"share.php?desc="+n+"&title="+t+"&url="+a+"&thumb="+a+"share.jpg&width=590&height=300"):"google"==e?o="https://plus.google.com/share?url="+a:"whatsapp"==e&&(o="whatsapp://send?text="+encodeURIComponent(n)+" - "+encodeURIComponent(a)),window.open(o)}